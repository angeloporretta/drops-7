<?php
/**
 * @file: Functionality of the module.
 */

/**
 * Implements hook_menu_alter.
 */
/*function bulk_file_upload_menu_alter(&$items) {
  
  if (isset($items['node/add/file'])) {
    $items['node/add/file']['access callback'] = 'bulk_file_upload_access_file_pages';
  }
  if (isset($items['node/%/edit'])) {
    kpr($items['node/%/edit']);
    var_dump($items['node/%/edit']);
    exit();
  }
}

function bulk_file_upload_access_file_pages() {
  
  global $user;
  $access = FALSE;
  
  if ($user->uid != 0) {
    $access = TRUE;
  }
  
  return $access;
}

//function bulk_file_upload_form_alter(&$form, &$form_state, $form_id) {
  
//  global $user;
  
//  if ($form_id == 'file_node_form' && $user->uid != 0) {
//    drupal_add_http_header('status', 404);
//    exit();
//  }
//}
 * 
 */

/**
 * Implements hook_permission.
 */
function bulk_file_upload_permission() {
  return array(
    'access bulk upload page' => array(
      'title' => t('Access bulk upload page'),
    ),
  );
}

/**
 * Implements hook_menu.
 */
function bulk_file_upload_menu() {
  
  return array(
    'bulk-upload-files' => array(
      'title' => t('Upload Files'),
      'description' => t('Upload files to this folder.'),
      'page callback' => 'bulk_file_upload_render_upload_page',
      'access callback' => 'user_access',
      'access arguments' => array('access bulk upload page'),
      'file' => 'bulk_file_upload.pages.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}

/**
 * Implements hook_form_alter.
 */
function bulk_file_upload_form_alter(&$form, &$form_state, $form_id) {
  
  if ($form_id == 'file_node_form') {
    drupal_add_js(drupal_get_path('module', 'bulk_file_upload') . '/js/bulk_file_upload_node_page.js');
  }
}

/**
 * Implements hook_forms.
 */
function bulk_file_upload_forms($form_id, $args) {
  
  return array(
    //'bulk_upload_taxonomy_form' => array(
    //  'callback' => 'bulk_file_upload_add_taxonomy_term_form',
    //  'callback arguments' => array($_GET['taxonomy_folder']),
    //),
    'bulk_upload_files_form' => array(
      'callback' => 'bulk_file_upload_add_files_form',
    )
  );
}

/**
 * Helper function.
 * Renders the add bulk files form.
 */
function bulk_file_upload_add_files_form($form, &$form_state) {
  
  drupal_add_css(drupal_get_path('module', 'bulk_file_upload') . '/css/bulk_file_upload_upload_page.css');
  drupal_add_js(drupal_get_path('module', 'bulk_file_upload') . '/js/bulk_file_upload_upload_page.js');
  $form = array();
  
  $form['files'] = array(
    '#prefix' => '<div id="files-wrapper">',
    '#suffix' => '</div>',
    '#type' => 'fieldset',
    '#title' => t('Files you want to upload'),
  );
  
  if (isset($_GET['tid']) && ctype_digit($_GET['tid'])) {
    $folder = taxonomy_term_load($_GET['tid']);
    $form['folder_prompt'] = array(
      '#type' => 'markup',
      '#markup' => t(
        'You will be uploading these files into the <strong>@folder_name</strong> folder.',
        array('@folder_name' => $folder->name)
      ),
      '#weight' => -50,
    );
  }
  
  if (isset($_SESSION['oa_section_id'])){
    $section_node = node_load($_SESSION['oa_section_id']);
    
    $form['is_private'] = array(
      '#type' => 'checkbox',
      '#title' => t('These files are private.'),
      '#description' => t(
        'These files will belong to the section <strong>@section</strong> unless you uncheck this box.',
        array('@section' => $section_node->title)
      ),
      '#default_value' => 1,
      '#weight' => -49,
    );
  }
  else {
    $form['public_prompt'] = array(
      '#type' => 'markup',
      '#markup' => t('These uploaded files will be publicly accessible'),
      '#weight' => -49,
    );
  }
          
  $node_upload_field_info = field_info_instance('node', 'field_uploaded_file', 'file');

  for ($i = 0; $i < 20; $i++) {
    $form['files']['file_upload_' . $i] = array(
      '#type' => 'managed_file',
      '#title' => t('Choose a file'),
      '#upload_location' => 'private://' . $node_upload_field_info['settings']['file_directory'] . '/',
      '#upload_validators' => array(
        'file_validate_extensions' => array($node_upload_field_info['settings']['file_extensions']),
      ),
    );
  }
  
  $form['add_more'] = array(
    '#type' => 'button',
    '#value' => t('Add More'),
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Upload Files'),
  );
  
  $form['#validate'] = array('bulk_file_upload_add_files_form_validate');
  $form['#submit'] = array('bulk_file_upload_add_files_form_submit');
  
  return $form;
  
}

function bulk_file_upload_add_files_form_validate($form, &$form_state) {
  
  if (isset($_GET['tid']) && ctype_digit($_GET['tid'])) {
    $term = taxonomy_term_load($_GET['tid']);
    if ($term->vocabulary_machine_name != 'file_categories') {
      @form_set_error($form['files'], t('Error: You are trying to save these files under a restricted folder.'));
    }
  }
}

/**
 * Submission handler.
 * Handles the submission for the bulk add files form.
 */
function bulk_file_upload_add_files_form_submit($form, &$form_state) {
  global $user;
  global $language;

  $new_file_node = (object) NULL;
  $new_file_node->type = 'file';
  $new_file_node->language = $language->language;
  $new_file_node->uid = $user->uid;
  $new_file_node->created = strtotime('now');
  $new_file_node->changed = strtotime('now');
  $new_file_node->status = 1;
  $new_file_node->comment = 1;
  $new_file_node->promote = 0;
  $new_file_node->moderate = 0;
  $new_file_node->sticky = 0;
  $new_file_node->validated = TRUE;
  $new_file_node->is_new = TRUE;
  $new_file_node->timestamp = strtotime('now');
  
  if (isset($_GET['tid']) && ctype_digit($_GET['tid'])) {
    $new_file_node->field_file_category['und'][0]['tid'] = $_GET['tid'];
  }
   
  foreach ($form_state['values'] as $element_name => $value) {
    if (strpos($element_name, 'file_upload') !== FALSE && $value != 0) {
      if (isset($form_state['values']['is_private']) && $form_state['values']['is_private'] == 1) {
        if (isset($_SESSION['oa_space_id'])){
          $new_file_node->og_group_ref['und'][0]['target_id'] = $_SESSION['oa_space_id'];
          $new_file_node->og_group_ref['und'][0]['field_mode'] = 'default';
        }
        if (isset($_SESSION['oa_section_id'])){
          $new_file_node->oa_section_ref['und'][0]['target_id'] = $_SESSION['oa_section_id'];
        }
      }

      $saved_file = file_load($value);
      $saved_file_name = substr($saved_file->filename, 0, strrpos($saved_file->filename, '.'));
      $new_file_node->title = $saved_file_name;

      $new_file_node->field_uploaded_file['und'][0]['fid'] = $value;
      $new_file_node->field_uploaded_file['und'][0]['display'] = 1;
      
      node_save($new_file_node);
      unset($new_file_node->nid);
      unset($new_file_node->vid);
      
      drupal_set_message(t('You have successfully saved the file @filename', array('@filename' => $saved_file_name)));
    }
  }
}