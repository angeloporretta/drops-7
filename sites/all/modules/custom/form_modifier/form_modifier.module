<?php

function form_modifier_webform_email_edit_form_submit($form, &$form_state) {
    $form_state['values']['template'] = $form_state['values']['template']['value'];
}

function form_modifier_webform_node_defaults_alter(&$defaults) {
  $defaults['auto_save'] = '1';
  $defaults['submit_notice'] = '0';
}

function form_modifier_form_webform_email_edit_form_alter(&$form, &$form_state, $form_id) {
  // WYSIWYG TEMPLATE
    $form['template']['template']["#wysiwyg"] = true;
    $form['template']['template']['#type'] = 'text_format';
    $form['template']['template']['#format'] = 'full_html';

    $new = array("form_modifier_webform_email_edit_form_submit");
    $form["#submit"] = array_merge($new,$form["#submit"]);
} 

/**
 * Implements hook_form_alter.
 */
function form_modifier_form_alter(&$form, &$form_state, $form_id) {
  global $user;
	// modify the node/add/ideas form
  if (arg(0) == 'node' && is_numeric(arg(1)) && arg(2) == '') {
    $node = node_load(arg(1));
    if ($node->type == 'webform') {
      if ($form_id == 'webform_client_form_' . $node->nid) {
        $loaded_user = user_load($user->uid);
        foreach($form['submitted'] as $key => $item) {
          // ordinary field type
          if (isset($item['#type'])) {
            if($item['#type'] == 'textfield' && $item['#title'] == 'First Name') {
              $form['submitted'][$key]['#default_value'] = $loaded_user->field_first_name[LANGUAGE_NONE][0]['value'];
            } else if($item['#type'] == 'textfield' && $item['#title'] == 'Last Name') {
              $form['submitted'][$key]['#default_value'] = $loaded_user->field_last_name[LANGUAGE_NONE][0]['value'];
            } else if($item['#type'] == 'textfield' && $item['#title'] == 'Email') {
              $form['submitted'][$key]['#default_value'] = $loaded_user->mail;
            } else if($item['#type'] == 'managed_file') {
              $form['submitted'][$key]['#description'] = 'Files must be less than <strong>100 MB</strong>.';
            }
          } else { //layout box
            if (isset($item['#webform_component']['type']) && $item['#webform_component']['type'] == 'layout_box') {
              foreach($item['#webform_component']['children'] as $children) {
                if ($children['name'] == 'First Name') {
                  $layout_key = $children['form_key'];
                  $form['submitted'][$key][$layout_key]['#default_value'] = $loaded_user->field_first_name[LANGUAGE_NONE][0]['value'];
                } else if ($children['name'] == 'Last Name') {
                  $layout_key = $children['form_key'];
                  $form['submitted'][$key][$layout_key]['#default_value'] = $loaded_user->field_last_name[LANGUAGE_NONE][0]['value'];
                } else if($children['name'] == 'Email') {
                  $layout_key = $children['form_key'];
                  $form['submitted'][$key][$layout_key]['#default_value'] = $loaded_user->mail;
                } else if($children['type'] == 'file'){
                  $layout_key = $children['form_key'];
                  $form['submitted'][$key][$layout_key]['#description'] = 'Files must be less than <strong>100 MB</strong>.';
                }
              }
            }
          } 
        }
      }
    }
  }

  drupal_add_js(drupal_get_path('module', 'form_modifier') . '/js/form_modifier.js');
  if ($form['#id'] == 'comment-form') {
    if (isset($form['field_file_upload'][LANGUAGE_NONE]['#file_upload_description'])) {
      $form['field_file_upload'][LANGUAGE_NONE]['#file_upload_description'] = '';
    }
  }
  switch ($form_id) {
    case "user_profile_form":
      if(arg(0) == 'user' && is_numeric(arg(1)) && arg(2) == 'edit') {
        if (arg(1) == 1418 || arg(1) == 1510) {
          hide($form['account']['pass']);
          hide($form['account']['mail']);
        }
      }
    break;

    case "registration_form":
      $form['#submit'][] = "event_registration_form_submit";
    break;

    case 'innovation_node_form':
        if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'innovation') {
          $form['#prefix'] = l('<button style="padding: 10px;
  background-color: #a7d0e5;
  color: white;
  border-style: solid;
  border-width: 2px;
  border-color: #4e6e99;
  border-radius: 10px;
  font-size: 12px;
  font-weight: bold;">' . t('Back to the Centre of Excellence') . '</button>' , "node/" . variable_get('coe_page') , array('alias' => FALSE , 'html' => TRUE));
        }
        if (isset($form['title']['#title'])) {
          $form['title']['#title'] .= '<span class="innovation-label-translate">(Titre du idée)</span>';
        }
        if (isset($form['field_employee_name'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_employee_name'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Nom de l’employé(s)</span>';
        }
        if (isset($form['field_title'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_title'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Titre (p. ex. chef de territoire)</span>';
        }
        if (isset($form['field_product'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_product'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Produit</span>';
        }
        if (isset($form['field_division'][LANGUAGE_NONE][0]['value']['#title'])) {
          hide($form['field_division']);
          $form['field_division'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Domaine thérapeutique</span>';
        }
        if (isset($form['field_keywords'][LANGUAGE_NONE]['#title'])) {
          $form['field_keywords'][LANGUAGE_NONE]['#title'] .= '<span class="innovation-label-translate">Mots-clés</span>';
        }
        if (isset($form['field_nnovation_name'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_nnovation_name'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Nom de l’idée novatrice</span>';
        }
        if (isset($form['field_insights'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_insights'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Perspectives</span>';
        }
        if (isset($form['field_actions'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_actions'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Actions</span>';
        }
        if (isset($form['field_results'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_results'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Résultats</span>';
        }
        if (isset($form['field_benefits'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_benefits'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Avantages pour les intervenants</span>';
        }
        if (isset($form['field_key_learnings'][LANGUAGE_NONE][0]['value']['#title'])) {
          $form['field_key_learnings'][LANGUAGE_NONE][0]['value']['#title'] .= '<span class="innovation-label-translate">Principaux éléments d’apprentissage</span>';
        }
        if (isset($form['field_innovation_image'][LANGUAGE_NONE][0]['#title'])) {
          $form['field_innovation_image'][LANGUAGE_NONE][0]['#title'] .= '<span class="innovation-label-translate">Téléverser une image qui représente votre innovation</span>';
        }
        if (isset($form['field_innovation_image'][LANGUAGE_NONE][0]['#description'])) {
          $form['field_innovation_image'][LANGUAGE_NONE][0]['#description'] .= '<span class="innovation-label-translate">La taille des fichiers doit être inférieure à 100 Mo.</span>';
        }
        if (isset($form['field_therapeutic_area'][LANGUAGE_NONE]['#title'])) {
          $form['field_therapeutic_area'][LANGUAGE_NONE]['#title'] .= '<span class="innovation-label-translate">Domaine thérapeutique</span>';
        }
        if (isset($form['field_date'])) {
          unset($form['field_date']);
        }
    break;

    case 'menu_edit_menu':
      
      if ($form['menu_name']['#default_value'] == 'og-menu-single') {
        
        drupal_add_js(drupal_get_path('module', 'form_modifier') . '/js/form_modifier.menuedit.js');
        
        $options = array();
        $space_query = new EntityFieldQuery();
        $space_result = $space_query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'oa_space')
          ->propertyCondition('status', 1)
          ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT')
          ->execute();
        
        if (!empty($space_result)) {
          $space_nodes = node_load_multiple(array_keys($space_result['node']));
          foreach ($space_nodes as $space_node) {
            $options[$space_node->title] = $space_node->title;
          }
        }
        
        $form['drill_down_parents'] = array(
          '#type' => 'select',
          '#title' => t('Search Menu Item'),
          '#multiple' => FALSE,
          '#options' => $options,
          '#empty_option' => ' - ' . t('Select a Parent Menu Item') . ' - ',
          '#weight' => -50,
        );

        foreach ($form as $key => $form_item) {
          if (strpos($key, 'mlid') !== FALSE) {
            $form[$key]['#attributes']['title'] = $form[$key]['#item']['title'];
          }
        }
        
        // Changing listing of menu items.
        $group_query = new EntityFieldQuery();
        $group_result = $group_query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'oa_group')
          ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT')
          ->execute();
        
        if (!empty($group_result)) {
          $group_paths = array_keys($group_result['node']);

          for ($i = 0; $i < count($group_paths); $i++) {
            $group_paths[$i] = 'node/' . $group_paths[$i];
          }

          foreach ($form as $key => $form_item) {
            if (
              strpos($key, 'mlid:') !== FALSE && 
              isset($form_item['#item']) && 
              in_array($form_item['#item']['link_path'], $group_paths)
            ) {
              unset($form[$key]);
            }
          }
        }
      }
    break;
    case 'views_exposed_form':
      
      if (strpos($form['#id'], 'views-exposed-form-admin-views-user-system') !== FALSE && 
          isset($form['og_user_node_target_id'])
      ) {
        
        $query = new EntityFieldQuery();
        $result = $query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'oa_group')
          ->propertyCondition('status', 1)
          ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT')
          ->propertyOrderBy('title', 'ASC')
          ->execute();
        
        $options = array();
        
        if (!empty($result)) {
          $group_nodes = node_load_multiple(array_keys($result['node']));
          
          foreach ($group_nodes as $group_node) {
            $options[$group_node->nid] = $group_node->title;
          }
        }
        
        $form['og_user_node_target_id'] = array(
          '#type' => 'select',
          '#multiple' => FALSE,
          '#options' => $options,
          '#validated' => TRUE,
          '#empty_option' => ' - ' . t('Please select a group') . ' - ',
        );
      }
    break;
    case 'panopoly_page_node_form':
      form_modifier_fix_group_ref_verbiage($form);
    break;
    case 'webform_node_form':
      form_modifier_fix_group_ref_verbiage($form);
    break;
    case 'devel_switch_user_form':
      $form['username']['#description'] = t("Please enter the user's first name or last name");
    break;
    case 'oa_space_node_form':
      if (isset($form['oa_parent_space'])) {
        $form['oa_parent_space']['und']['#description'] = '';
      }
    break;
    case 'oa_section_node_form':
      form_modifier_fix_group_ref_verbiage($form);
    break;
    case 'ideas_node_form':
      if (isset($_GET['type']) && !empty($_GET['type'])) {
        if($_GET['type'] == 'competitive') {
          $form['field_page_type'][LANGUAGE_NONE]['#default_value'] = 'Competitively Differentiate CONCERTA vs. All Competition';
          $form['field_ideas_markup'][LANGUAGE_NONE][0]['value']['#default_value'] = 'competitive markup';
        } else if ($_GET['type'] == 'grow') {
          $form['field_page_type'][LANGUAGE_NONE]['#default_value'] = 'Grow The Adult ADHD Market';
          $form['field_ideas_markup'][LANGUAGE_NONE][0]['value']['#default_value'] = 'grow markup';
        } else if ($_GET['type'] == 'ensure') {
          $form['field_page_type'][LANGUAGE_NONE]['#default_value'] = 'Ensure All Patients Prescribed CONCERTA Receive CONCERTA';
          $form['field_ideas_markup'][LANGUAGE_NONE][0]['value']['#default_value'] = 'ensure markup';
        }
        hide($form['field_page_type']);
        hide($form['field_ideas_markup']);
      }
    break;
    case 'privatemsg_new':

      drupal_add_js(drupal_get_path('module', 'form_modifier') . '/js/form_modifier.privatemsg.js');
      
      if (isset($_GET['preset-message-uid'])) {
        
        $preset_user = user_load($_GET['preset-message-uid']);
        
        if ($preset_user !== FALSE) {
          $form['recipient']['#default_value'] = $preset_user->realname;
        }
      }
      
      $form['recipient']['#description'] = t('Start typing the name of a person you would like to send a message to.');
      $form['subject']['#required'] = TRUE;
      $form['subject']['#maxlength'] = 256;
      $form['subject']['#size'] = 128;
      $form['body']['#required'] = TRUE;
      $form['body']['#format'] = 'plain_text';
      $form['body']['#resizable'] = FALSE;
      // unset($form['recipient']['#autocomplete_path']);
      unset($form['actions']['cancel']);
      
      $form['redirection'] = array(
        '#type' => 'hidden',
        '#value' => (isset($_GET['form-mod-redirection'])) ? $_GET['form-mod-redirection'] : '',
      );
      
      $form['#submit'][] = 'form_modifier_privatemsg_new_submit';
    break;
    case 'block_admin_configure':
      if ($form['delta']['#value'] == '1') {
        drupal_add_css(drupal_get_path('module', 'form_modifier') . '/css/form_modifier.block.css');
      }
    break;
    case 'privatemsg_list':
      $form['updated']['actions']['operation']['#options'][0] = 'Mark as...';
    break;
  }
}

function event_registration_form_submit($form , &$form_state) {
  if(arg(0) == 'node' && is_numeric(arg(1))) {
    drupal_goto('node/' . arg(1));
  }
}

/**
 * Helper Function.
 * Small helper function that changes the labeling of the og_group_ref field.
 * @param form: A form array.
 */
function form_modifier_fix_group_ref_verbiage(&$form) {
  
  if (isset($form['og_group_ref'])) {
    $form['og_group_ref']['und'][0]['default']['#title'] = t('Your Spaces');
    $form['og_group_ref']['und'][0]['default']['#description'] = t('Associate this content with spaces you belong to.');
    $form['og_group_ref']['und'][0]['admin'][0]['target_id']['#title'] = t('Other Spaces');
    $form['og_group_ref']['und'][0]['admin'][0]['target_id']['#description'] = t('Associate this content with spaces you do not belong to.');
  } 
}

/**
 * Form submit function.
 * Performs an appropriate page redirect after the private message creation for is filled out.
 */
function form_modifier_privatemsg_new_submit($form, &$form_state) {
  if ($form_state['values']['redirection'] != '') {
    $form_state['redirect'] = $form_state['values']['redirection'];
  }
}